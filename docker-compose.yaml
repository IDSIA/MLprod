version: '3.3'

networks:
  # Services in this network will be accessible only by other services
  mlpnet:
  # Services in this network can be accessed by the world (via Traefik)
  www:
    external: true

services:

  # Message broker: manager for the task queue
  rabbitmq:
    image: rabbitmq
    # ports: 5672
    networks:
      - mlpnet

  # NoSQL database for caching results
  redis:
    image: redis
    # ports: 6379
    networks:
      - mlpnet

  # Tracking and metric service
  prometheus:
    image: prom/prometheus
    networks:
      - mlpnet
      - www
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlprom.rule=Host(`mlprom.${DOMAIN}`)"
      - "traefik.http.routers.mlprom.entrypoints=web"
      - "traefik.http.services.mlprom.loadbalancer.server.port=9090"

  # Storage for all data
  database:
    image: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_DB=${DATABASE_SCHEMA}
    networks:
      - mlpnet
    # ports: 5432

  # Celery worker
  worker:
    image: cas.mlp.worker
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - CELERY_BACKEND_URL=${CELERY_BACKEND_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_QUEUE=${CELERY_QUEUE}
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASS}@${DATABASE_HOST}/${DATABASE_SCHEMA}
    volumes:
      - ./models:/app/models
    networks:
      - mlpnet
    depends_on:
      - redis
      - rabbitmq
      - database

  # Service that expose the API
  api:
    image: cas.mlp.api
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - CELERY_BACKEND_URL=${CELERY_BACKEND_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASS}@${DATABASE_HOST}/${DATABASE_SCHEMA}
    # ports: 4789
    networks:
      - www
      - mlpnet
    depends_on:
      - worker
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlpapi.rule=Host(`mlpapi.${DOMAIN}`)"
      - "traefik.http.routers.mlpapi.entrypoints=web"
      - "traefik.http.services.mlpapi.loadbalancer.server.port=4789"

  # Dashboard
  grafana:
    image: grafana/grafana-oss
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASS}
      - GF_USERS_ALLOW_SIGN_UP=false

      - DS_PROMETHEUS_URL=prometheus
      - DS_PROMETHEUS_PORT=9090

      - DS_POSTGRES_URL=database
      - DS_POSTGRES_PORT=5432
      - DS_POSTGRES_USER=${DATABASE_USER}
      - DS_POSTGRES_PASSWORD=${DATABASE_PASS}
      - DS_POSTGRES_DB=${DATABASE_SCHEMA}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    # ports: 3000
    networks:
      - mlpnet
      - www
    depends_on:
      - database
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlpgrafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.mlpgrafana.entrypoints=web"
      - "traefik.http.services.mlpgrafana.loadbalancer.server.port=3000"
