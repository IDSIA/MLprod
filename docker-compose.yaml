version: '3.3'

networks:
  mlpnet:
  www:
    external: true

services:

  rabbitmq:
    image: rabbitmq
    # ports: 5672
    networks:
      - mlpnet

  redis:
    image: redis
    # ports: 6379
    networks:
      - mlpnet

  prometheus:
    image: prom/prometheus
    networks:
      - mlpnet
      - www
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlprom.rule=Host(`mlprom.${DOMAIN}`)"
      - "traefik.http.routers.mlprom.entrypoints=web"
      - "traefik.http.services.mlprom.loadbalancer.server.port=9090"

  database:
    image: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_DB=${DATABASE_SCHEMA}
    networks:
      - mlpnet
      - www
    ports:
      - 15432:5432
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitordb.rule=Host(`monitordb.${DOMAIN}`)"
      - "traefik.http.routers.monitordb.entrypoints=web"
      - "traefik.http.services.monitordb.loadbalancer.server.port=5432"

  worker:
    image: cas.mlp.worker
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - CELERY_BACKEND_URL=${CELERY_BACKEND_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_QUEUE=${CELERY_QUEUE}
    networks:
      - mlpnet
    depends_on:
      - redis
      - rabbitmq
      - database

  api:
    image: cas.mlp.api
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - CELERY_BACKEND_URL=${CELERY_BACKEND_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASS}@${DATABASE_HOST}/${DATABASE_SCHEMA}
      - STATSD_URL=${STATSD_URL}
      - STATSD_PORT=${STATSD_PORT}
    ports:
      - 4789:4789
    networks:
      - www
      - mlpnet
    depends_on:
      - worker
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlpapi.rule=Host(`mlpapi.${DOMAIN}`)"
      - "traefik.http.routers.mlpapi.entrypoints=web"
      - "traefik.http.services.mlpapi.loadbalancer.server.port=4789"

  grafana:
    image: grafana/grafana-oss
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASS}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports: 
      - 3000:3000
    networks:
      - www
      - mlpnet
    depends_on:
      - database
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlpgrafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.mlpgrafana.entrypoints=web"
      - "traefik.http.services.mlpgrafana.loadbalancer.server.port=3000"
